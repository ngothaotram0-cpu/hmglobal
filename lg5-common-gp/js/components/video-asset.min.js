var video;
$(document).ready(function () {
  var r;
  ("undefined" != typeof ePrivacyCookies &&
    !ePrivacyCookies.get("LGCOM_IMPROVEMENTS")) ||
    (((e = document.createElement("script")).src =
      "https://www.youtube.com/iframe_api"),
    $("body").append(e));
  var e =
    0 < $(".navigation").length && $(".navigation").data("close-video")
      ? $(".navigation").data("close-video")
      : "Close Video";
  (video = {
    originalFocus: null,
    cache: {
      $modal: null,
      id: null,
    },
    markup: {
      modal: [
        '<div class="video-modal video-box-closeset youtube"><div class="video-modal-background"></div><div class="modal-video-asset"><div class="video-asset">',
        '<div class="video-modal video-box-closeset brightcove"><div class="video-modal-background"></div><div class="modal-video-asset"><div class="video-asset">',
        '</div></div><button class="close-video">' + e + "</button></div>",
      ],
      modal_mobile: [
        '<div class="video-modal video-box-closeset youtube"><div class="video-modal-background"></div><div class="modal-video-asset"><div class="video-asset has-mobile-video">',
        '<div class="video-modal video-box-closeset brightcove"><div class="video-modal-background"></div><div class="modal-video-asset"><div class="video-asset has-mobile-video">',
        '</div></div><button class="close-video">' + e + "</button></div>",
      ],
      current: [
        '<div class="video-asset video-box-closeset">',
        '<button class="close-video">' + e + "</button></div>",
      ],
    },
    getTitle: function (e, t) {
      var o = "",
        o = "youtube" == e ? t.getVideoData().title : t.mediainfo.name;
      return changeTitleFormat(o);
    },
    trigger: {
      init: function () {
        video.trigger.addEvent();
      },
      setYoutube: function (e) {
        var t = xssfilter(e.getAttribute("data-src")),
          o = null,
          a = !1,
          i = xssfilter(e.getAttribute("data-view-type")),
          d =
            (0 < $(".GPC0074 .slick-list").length &&
              1 == isMobile &&
              ((t = xssfilter(e.getAttribute("data-mobile-src"))), (a = !0)),
            0 < t.indexOf("/") && (t = (d = t.split("/"))[d.length - 1]),
            e.getAttribute("data-target"),
            '<div id="videoPlayerCode"></div>');
        "modal" == e.getAttribute("data-target")
          ? ((o =
              1 == a && "vertical" == i
                ? video.markup.modal_mobile[0] +
                  d +
                  video.markup.modal_mobile[2]
                : video.markup.modal[0] + d + video.markup.modal[2]),
            video.appendModal("youtube", o, t))
          : ((o = video.markup.current[0] + d + video.markup.current[1]),
            video.appendCurrent("youtube", o, t, "", "", e)),
          this.playVideoYoutube(t);
      },
      setBrightcove: function (e) {
        var t,
          o = xssfilter(e.getAttribute("data-video-id")),
          a = xssfilter(e.getAttribute("data-account")),
          i = xssfilter(e.getAttribute("data-player")),
          d = null,
          n = !1,
          l = xssfilter(e.getAttribute("data-view-type"));
        0 < $(".GPC0074 .slick-list").length &&
          1 == isMobile &&
          ((o = xssfilter(e.getAttribute("data-mobile-video-id"))), (n = !0)),
          (t = '<div id="videoPlayerCode"></div>'),
          "modal" == e.getAttribute("data-target")
            ? ((d =
                1 == n && "vertical" == l
                  ? video.markup.modal_mobile[1] +
                    t +
                    video.markup.modal_mobile[2]
                  : video.markup.modal[1] + t + video.markup.modal[2]),
              video.appendModal("brightcove", d, o))
            : ((d = video.markup.current[0] + t + video.markup.current[1]),
              video.appendCurrent("brightcove", d, o, a, i, e)),
          this.playVideoBrightCove(a, i, o);
      },
      playVideoYoutube: function (e) {
        0 <= e.indexOf("?") && (e = e.split("?")[0]),
          setTimeout(function () {
            var i = new YT.Player("videoPlayerCode", {
              height: "360",
              width: "640",
              videoId: e,
              host: "https://www.youtube.com",
              playerVars: {
                modestbranding: !0,
                rel: 0,
              },
              events: {
                onReady: function (e) {
                  e.target.playVideo();
                },
                onStateChange: function (e) {
                  e.data == YT.PlayerState.PLAYING &&
                    adobeSatellite("video_track", {
                      name: video.getTitle("youtube", i),
                      event: "play",
                    });
                  e.data == YT.PlayerState.PAUSED &&
                    adobeSatellite("video_track", {
                      name: video.getTitle("youtube", i),
                      event: "pause",
                    });
                },
              },
            });
            var d = [0, 0, 0, 0];
            r = setInterval(function () {
              if ("function" != typeof i.getDuration) return !1;
              for (
                var e = i.getDuration(),
                  t = i.getCurrentTime(),
                  o = parseInt((100 * t) / e),
                  a = 1;
                a <= 4;
                a++
              )
                25 * a <= o &&
                  0 == d[a - 1] &&
                  ((d[a - 1] = 1),
                  adobeSatellite("video_track", {
                    name: video.getTitle("youtube", i),
                    event: "ratio_" + 25 * a,
                  }));
              99 <= o &&
                0 == d[3] &&
                ((d[3] = 1),
                adobeSatellite("video_track", {
                  name: video.getTitle("youtube", i),
                  event: "ratio_100",
                }));
            }, 2e3);
          }, 1e3);
      },
      playVideoBrightCove: function (e, t, o) {
        var d,
          a = e,
          n = t,
          l =
            '<video-js id="brightCovePlayer" data-video-id="' +
            o +
            '"  data-account="' +
            a +
            '" data-player="' +
            n +
            '" data-embed="default" data-application-id autoplay class="video-js" controls></video-js>';
        setTimeout(function () {
          document.getElementById("videoPlayerCode").innerHTML = l;
          var e = document.createElement("script");
          (e.src =
            "https://players.brightcove.net/" +
            a +
            "/" +
            n +
            "_default/index.min.js"),
            document.body.appendChild(e),
            (e.onload = function () {
              (d = bc(document.getElementById("brightCovePlayer"))).on(
                "loadedmetadata",
                function () {
                  d.muted(!1), d.play();
                }
              ),
                d.on("pause", function () {
                  adobeSatellite("video_track", {
                    name: video.getTitle("brightcove", d),
                    event: "pause",
                  });
                }),
                d.on("play", function () {
                  adobeSatellite("video_track", {
                    name: video.getTitle("brightcove", d),
                    event: "play",
                  });
                });
            });
          var i = [0, 0, 0, 0];
          r = setInterval(function () {
            for (
              var e = d.mediainfo.duration,
                t = d.currentTime(),
                o = parseInt((100 * t) / e),
                a = 1;
              a <= 4;
              a++
            )
              25 * a <= o &&
                0 == i[a - 1] &&
                ((i[a - 1] = 1),
                adobeSatellite("video_track", {
                  name: video.getTitle("brightcove", d),
                  event: "ratio_" + 25 * a,
                }));
            99 <= o &&
              0 == i[3] &&
              ((i[3] = 1),
              adobeSatellite("video_track", {
                name: video.getTitle("brightcove", d),
                event: "ratio_100",
              }));
          }, 2e3);
        }, 1e3);
      },
      addEvent: function () {
        var r = video.trigger,
          e = $(".component");
        (e = e.length <= 0 ? $(".container-fluid") : e).off("click.video").on(
          {
            "click.video": function (e) {
              e.preventDefault();
              var t,
                o,
                a,
                i,
                d,
                n,
                l,
                e = e.currentTarget;
              0 < $("#videoPlayerCode").length &&
                (0 < (t = $("#videoPlayerCode")).closest(".video-modal").length
                  ? t.closest(".video-modal").find("button.close-video")
                  : $("#videoPlayerCode").siblings("button.close-video")
                ).trigger("click"),
                $(".eprivacy-layer").remove(),
                "youtube" == e.getAttribute("data-type")
                  ? "undefined" == typeof ePrivacyCookies ||
                    ePrivacyCookies.get("LGCOM_IMPROVEMENTS")
                    ? (0 < $("#videoPlayerCode").length &&
                        (0 <
                        (t = $("#videoPlayerCode")).closest(".video-modal")
                          .length
                          ? t.closest(".video-modal").find("button.close-video")
                          : $("#videoPlayerCode").siblings("button.close-video")
                        ).trigger("click"),
                      (o = !0),
                      (video.originalFocus = $(e)),
                      "modal" != e.getAttribute("data-target") &&
                        ((a = $(e).data("cachedvideo")),
                        (i = $(e).data("cacheid")),
                        (d = $(e).data("cacheaccount")),
                        (n = $(e).data("cacheplayer")),
                        (o =
                          !a ||
                          (video.appendCurrent(
                            e.getAttribute("data-type"),
                            a,
                            i,
                            d,
                            n,
                            e,
                            !0
                          ),
                          "function" == typeof video.playVideoYoutube &&
                            video.playVideoYoutube(i),
                          !1))),
                      o && r.setYoutube(e),
                      0 < (l = $(e).closest(".slick-initialized")).length &&
                        l.next().find("a.slide-pause.pause").trigger("click"))
                    : ePrivacyCookies.view("click")
                  : ((o = !0),
                    (video.originalFocus = $(e)),
                    "modal" != e.getAttribute("data-target") &&
                      ((a = $(e).data("cachedvideo")),
                      (i = $(e).data("cacheid")),
                      (d = $(e).data("cacheaccount")),
                      (n = $(e).data("cacheplayer")),
                      (o =
                        !a ||
                        (video.appendCurrent(
                          e.getAttribute("data-type"),
                          a,
                          i,
                          d,
                          n,
                          e,
                          !0
                        ),
                        "function" == typeof video.playVideoBrightCove &&
                          video.playVideoBrightCove(d, n, i),
                        !1))),
                    o && r.setBrightcove(e),
                    0 < (l = $(e).closest(".slick-initialized")).length &&
                      l.next().find("a.slide-pause.pause").trigger("click"));
            },
          },
          ".see-video"
        );
      },
    },
    appendCurrent: function (e, t, o, a, i, d, n) {
      var l = t,
        r = $(d).parents(".video-box"),
        t = (r = r.get(0)
          ? r
          : $(d).parents(".video-box").find(".visual-area")).find(
          ".video-asset"
        ),
        v = $(d).parents(".carousel-box").find(".text-area");
      t && t.remove(),
        v.animate(
          {
            opacity: 0,
          },
          500
        ),
        r.parents(".component").addClass("js-invisible-nav"),
        setTimeout(function () {
          v.css({
            zIndex: -1,
          }),
            r.append(l),
            n || video.initCompo(d, o, a, i);
        }, 500);
    },
    appendModal: function (e, t, o) {
      var a = document.querySelectorAll(".video-modal")[0];
      a && $(a).remove(),
        $("body").addClass("modal-open").append(t),
        $("body").find(".video-modal").attr("tabindex", 0).focus(),
        video.initModal(),
        (video.cache.id = o);
    },
    initCompo: function (o, a, i, d) {
      $(".video-asset").on(
        {
          click: function (e) {
            e.preventDefault();
            var t = $(e.delegateTarget),
              e = $(e.delegateTarget).parents(".video-box").find(".text-area");
            t.parents(".component").removeClass("js-invisible-nav"),
              $(o).data("cachedvideo", t.detach()),
              $(o).data("cacheid", a),
              $(o).data("cacheaccount", i),
              $(o).data("cacheplayer", d),
              e.removeAttr("style");
          },
        },
        ".close-video"
      );
    },
    initModal: function () {
      function t(e) {
        (e = $(e.delegateTarget)),
          (video.cache.$modal = e.detach()),
          $("body").removeClass("modal-open"),
          video.originalFocus.focus(),
          r && clearInterval(r);
      }
      var e = $(".video-modal");
      e.on(
        {
          click: function (e) {
            e.preventDefault(), t(e);
          },
        },
        ".close-video"
      ),
        e.on({
          "keydown.loopFocus": function (e) {
            var t = $(this)
              .find(
                "a[href], area[href], input:not([disabled]), input:not([readonly]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]"
              )
              .last();
            e.target === e.currentTarget
              ? 9 === e.keyCode && e.shiftKey && (e.preventDefault(), t.focus())
              : 0 <= $(e.target).attr("class").indexOf("close-video") &&
                (9 !== e.keyCode ||
                  e.shiftKey ||
                  (e.preventDefault(), $(e.currentTarget).focus()));
          },
          "keydown.closeModal": function (e) {
            27 === e.keyCode && (e.preventDefault(), t(e));
          },
        }),
        e.on({
          click: function (e) {
            e.preventDefault(),
              ($(e.target).hasClass("video-modal") ||
                $(e.target).hasClass("modal-video-asset") ||
                $(e.target).hasClass("video-asset") ||
                $(e.target).hasClass("video-modal-background")) &&
                t(e);
          },
        });
    },
    init: function () {
      video.trigger.init();
    },
  }).init();
});
//# sourceMappingURL=maps/video-asset.min.js.map
